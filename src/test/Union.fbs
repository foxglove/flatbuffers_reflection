// Sentinel struct that we've named AA so it appears first in the list of "objects" in the
// reflection schema. This helps catch logic errors in handling of field "typeIndex" lookups
// that got lucky and landed on a table object even though the logic used the wrong "typeIndex"
struct AA {
  count:double;
}

table Gemstone {
  shine:double;
}

table Arms {
  count:uint8;
}

table Skull {
  name:string;
}

union ShieldDecorator { Gemstone, Arms, Skull }

table Sword {
  name:string;
  damage:short;
}

table Shield {
  protection:float;
  primary_decorator: ShieldDecorator;
  decorators:[ShieldDecorator];
}

union Equipment { Sword, Shield }

table Monster {
  equipped:Equipment;
}

root_type Monster;
